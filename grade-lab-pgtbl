#!/usr/bin/env python3

import re
from gradelib import *

r = Runner(save("xv6.out"))

PTE_PRINT = """page table 0x80407000
..0: pte 0x20102c01 pa 0x8040b000
.. ..0: pte 0x20103001 pa 0x8040c000
.. .. ..0: pte 0x20103001 pa 0x8040c000
..255: pte 0x20102001 pa 0x80408000
.. ..511: pte 0x20102401 pa 0x80409000
.. .. ..511: pte 0x20102401 pa 0x80409000"""

VAL_RE = "(0x[0-9a-f]+)"
INDENT_RE = r"\s*\.\.\s*"
INDENT_ESC = "\\\s*\.\.\\\s*"

@test(0, "pgtbltest")
def test_pgtbltest():
    r.run_qemu(shell_script([
        'pgtbltest'
    ]), timeout=300)

@test(10, "pgtbltest: ugetpid", parent=test_pgtbltest)
def test_nettest_():
    r.match('^ugetpid_test: OK$')

@test(10, "pgtbltest: pgaccess", parent=test_pgtbltest)
def test_nettest_():
    r.match('^pgaccess_test: OK$')

@test(10, "pte printout")
def test_pteprint():
    first = True
    r.run_qemu(shell_script([
        'echo hi'
    ]))
    r.match('^hi')
    p = re.compile(VAL_RE)
    d = re.compile(INDENT_RE)
    for l in PTE_PRINT.splitlines():
        l = d.sub(INDENT_ESC, l)
        l = p.sub(VAL_RE, l)
        r.match(r'^{}$'.format(l))
        if first:
            first = False
        else:
            matches = re.findall(r'^{}$'.format(l), r.qemu.output, re.MULTILINE)
            assert_equal(len(matches[0]), 2)
            pa = (int(matches[0][0], 16) >> 10) << 12
            assert_equal(int(matches[0][1], 16), pa)

# @test(5, "answers-pgtbl.txt")
# def test_answers():
#     # just a simple sanity check, will be graded manually
#     check_answers("answers-pgtbl.txt")

@test(0, "usertests")
def test_usertests():
    r.run_qemu(shell_script([
        'usertests'
    ]), timeout=300)

@test(10, "usertests: all tests", parent=test_usertests)
def test_usertests():
    r.match('^ALL TESTS PASSED$')

# @test(1, "time")
# def test_time():
#     check_time()

run_tests()
